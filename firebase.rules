rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    function isSignedIn() {
      return request.auth != null;
    }
    
    function isOwner(userId) {
      return request.auth.uid == userId;
    }
    
    match /users/{userId} {
      allow read: if isSignedIn();
      allow write: if isOwner(userId);
    }
    
    match /cookbooks/{cookbookId} {
      allow read: if isSignedIn() && 
        (resource.data.ownerId == request.auth.uid || 
         resource.data.sharedWith[request.auth.uid] != null);
      allow create: if isSignedIn();
      allow update, delete: if isSignedIn() && 
        (resource.data.ownerId == request.auth.uid);
    }
    
    match /recipes/{recipeId} {
      allow read: if isSignedIn() && exists(/databases/$(database)/documents/cookbooks/$(resource.data.cookbookId)) &&
        (get(/databases/$(database)/documents/cookbooks/$(resource.data.cookbookId)).data.ownerId == request.auth.uid ||
         get(/databases/$(database)/documents/cookbooks/$(resource.data.cookbookId)).data.sharedWith[request.auth.uid] != null);
      allow create: if isSignedIn();
      allow update, delete: if isSignedIn() && 
        (resource.data.authorId == request.auth.uid ||
         get(/databases/$(database)/documents/cookbooks/$(resource.data.cookbookId)).data.ownerId == request.auth.uid);
    }
  }
}